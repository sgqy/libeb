\input texinfo	        @c -*-texinfo-*-
@c %** start of header
@setfilename ebappendix-ja.info
@settitle ebappendix
@c %** end of header

@include version-ebappendix.texi

@dircategory CD-ROM Book Utilities
@direntry
* ebappendix-ja: (ebappendix-ja).  Format appendix files for a CD-ROM book.
@end direntry

@ifinfo
ebappendix: 付録 (appendix) データ整形ツール、笠原基之

Copyright @copyright{} 2003  Motoyuki Kasahara

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by Free Software Foundation, Inc.
@end ifinfo

@titlepage
@title ebappendix
@subtitle 付録 (appendix) データ整形ツール
@subtitle 第 @value{EDITION} 版 (EB ライブラリバージョン @value{VERSION} に対応)
@subtitle @value{UDATED}
@author 笠原 基之

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2003  Motoyuki Kasahara

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by Free Software Foundation, Inc.
@end titlepage

@node Top, Introduction, (dir), (dir)
@ifinfo
この文書は第 @value{EDITION} 版です。
EB ライブラリバージョン @value{VERSION} に対応しています。
@end ifinfo

@menu
* Introduction::                はじめに
* Write Appendix Source::       appendix のソースデータの書き方
* Generate Appendix::           appendix の生成

@detailmenu
 --- The Detailed Node Listing ---

はじめに

* What is Appendix::            appendix (付録) とは
* What is ebappendix::          @code{ebappndix} コマンドとは

appendix のソースデータの書き方

* What is catalog.app::         @code{catalog(s).app} とは
* Write catalog.app::           @code{catalog(s).app} の書き方
* What is subbook.app::         @code{<副本>.app} とは
* subbook.app Syntax::          @code{<副本>.app} の文法
* Single Directives::           @code{<副本>.app} の単独指示子
* Group Directives::            @code{<副本>.app} の複合指示子

appendix の生成

* Invoke ebappendix::           @code{ebappendix} の実行
* Merge Appendix::              appendix と CD-ROM 書籍の重ね合わせ
* Options to ebappendix::       @code{ebappendix} のオプション

@end detailmenu
@end menu

@c ===================================================================
@node Introduction, Write Appendix Source, Top, Top
@chapter はじめに

@code{ebappendix} はフリーソフトウェアです。
あなたは、Free Software Foundation が公表した GNU General Public License
(GNU 一般公有使用許諾) バージョン 2 あるいはそれ以降の各バージョンの中
からいずれかを選択し、そのバージョンが定める条項に従って本プログラムを
再頒布または変更することができます。

@code{ebappendix} は有用とは思いますが、頒布にあたっては、市場性及び特定目
的適合性についての暗黙の保証を含めて、いかなる保証も行ないません。
詳細については GNU General Public License をお読み下さい。

@menu
* What is Appendix::            appendix (付録) とは
* What is ebappendix::          @code{ebappndix} コマンドとは
@end menu

@c -------------------------------------------------------------------
@node What is Appendix, What is ebappendix, Introduction, Introduction
@section appendix (付録) とは

@dfn{appendix} (@dfn{付録}) とは CD-ROM 書籍の補助データのことです。
appendix は CD-ROM 書籍の出版社から提供されているものではなく、
EB ライブラリに固有のものです。

appendix は以下のデータを CD-ROM 書籍に対して提供します。

@table @asis
@item 本文の区切りコード
あなたが EB ライブラリを使って CD-ROM 辞書の中のある単語を引く際、その
単語の説明が終了する箇所で、EB ライブラリが本文の出力を止めることを
あなたは期待するのではないでしょうか。
しかし、EB ライブラリはそのような動作を保証することができません。
なぜなら、CD-ROM 書籍の本文には、項目の終わりを示す印が存在しないから
です。

幸いにも、多くの CD-ROM 書籍には、項目の終わりを示す印の代替として
使える、@dfn{区切りコード} (@dfn{stop code}) というものを持っています。
通常、EB ライブラリはこの区切りコードを自動的に推測するようになって
いるのですが、時々誤った区切りコードを導き出すことがあります。
appendix の区切りコードは、その書籍の正しい区切りコードを EB ライブラリ
に教えてやるために用います。

@item 外字の代替文字列
多くの CD-ROM 書籍は、外字 (独自に定義した文字) を持っており、本文中で
その外字を使っています。
CD-ROM 書籍では外字のビットマップフォントを用意しており、
クライアントアプリケーションが外字を出力するには、そのフォントを描画
しなくてはなりません。

appendix では、外字の @dfn{代替文字列} (@dfn{alternation text}) を定義
することができます。
アプリケーションは、ビットマップフォントを描画する代わりに、その
代替文字列を出力することにしても良いでしょう。
@end table

appendix のレイアウトは CD-ROM 書籍のものとよく似ています。
トップディレクトリには @code{catalog} もしくは @code{catalogs}
ファイルが存在し、各副本のデータは対応するサブディレクトリに配置されて
います。

@c -------------------------------------------------------------------
@node What is ebappendix,  , What is Appendix, Introduction
@section @code{ebappendix} コマンドとは

appendix はバイナリ形式のデータファイルで構成されますので、手で直接
編集するのは容易ではありません。
そこで、EB ライブラリでは @code{ebappendix} コマンドを用意しています。
@code{ebappendix} コマンドは、テキスト形式で書かれたデータを読み込み、
バイナリ形式の appendix を生成します。

EB ライブラリの公式な FTP サイト
(@url{ftp://ftp.sra.co.jp/pub/misc/eb/appendix/})
には、既にいくつかの書籍用の appendix が置いてあります。
ここに載っていない CD-ROM 書籍用の appendix を用意したい場合は、
@code{ebappendix} コマンドを使いましょう。

@c ===================================================================
@node Write Appendix Source, Generate Appendix, Introduction, Top
@chapter appendix のソースデータの書き方

この章では、appendix のソースデータの書き方を説明します。
ここで、「ソースデータ」と言っているのは、@code{ebappendix} が読み込む
テキスト形式で書かれたデータのことです。

appendix を生成するためには、次に挙げるソースデータファイルが必要です。
これらのファイルをすべて、同じディレクトリ上に用意するようにします。

@table @asis
@item @code{catalog.app} または @code{catalogs.app}
appendix には必ず、@code{catalog} または @code{catalogs} という名前の
ファイルが必要です。
@code{catalog.app}, @code{catalogs.app} はその生成元となるファイルです。
appendix に収録されている @dfn{副本 (subbook)}
(詳しくは @pxref{Write catalog.app, , @code{catalog(s).app} の書き方})
の一覧を記します。

@item @code{<副本>.app}
appendix が収録している副本それぞれに対して、一つずつ用意する必要が
あります (@code{<副本>} の部分は、実際は個々の副本の名前になります)。
appendix のメインデータである、本文の区切りコードや外字の代替文字列は、
このファイルに記します。
@end table

@menu
* What is catalog.app::         @code{catalog(s).app} とは
* Write catalog.app::           @code{catalog(s).app} の書き方
* What is subbook.app::         @code{<副本>.app} とは
* subbook.app Syntax::          @code{<副本>.app} の文法
* Single Directives::           @code{<副本>.app} の単独指示子
* Group Directives::            @code{<副本>.app} の複合指示子
@end menu

@c -------------------------------------------------------------------
@node What is catalog.app, Write catalog.app, Write Appendix Source, Write Appendix Source
@section @code{catalog(s).app} とは

CD-ROM 書籍と同様に、appendix パッケージにも必ず @code{catalog} もしくは
@code{catalogs} という名前のファイルのどちらか一方が必要です。
@code{catalog.app}, @code{catalogs.app} ファイルは、その生成元となります。

@code{ebappendix} コマンドに appendix を生成させる際には、
@code{catalog.app} か @code{catalogs.app} のどちらかを必ず用意しておく
必要があります。

@code{ebappendix} の標準の動作では、@code{catalog.app} というファイル名
にしておくと、生成するファイル名も @code{catalog} になります。
また、appendix 全体のディレクトリ構造が、電子ブックに似た形式になります。

反対に、@code{catalogs.app} というファイル名にしておくと、生成する
ファイル名も @code{catalogs} になります。
また、appendix 全体のディレクトリ構造が、EPWING に似た形式になります。

ただし、EPWING の書籍に対して電子ブック形式の appendix を使用しても、
動作そのものには支障がありません。
逆も同様です。

@c -------------------------------------------------------------------
@node Write catalog.app, What is subbook.app, What is catalog.app, Write Appendix Source
@section @code{catalog(s).app} の書き方

@code{catalog(s).app} には、書籍に収録されている副本のディレクトリ名を
1 行に 1 つずつ書き並べます。
副本のディレクトリ名は、@code{ebinfo} コマンドを使うと容易に分かります。

以下は、@code{ebinfo} の実行例です。

@example
@group
% ebinfo /mnt/cdrom
ディスクの形式: EB/EBG/EBXA/EBXA-C/S-EBXA
文字コード: JIS X 0208
副本の数: 2

@end group
@group
副本  1:
  題名: 新英和辞典（第三版）
  ディレクトリ: ejdict
  検索方式: 前方一致 後方一致 条件 メニュー 
  フォントの大きさ: 16 24 30 48
  半角フォントの文字: 0xa121 -- 0xa24e
  全角フォントの文字: 0xa321 -- 0xa27e

@end group
@group
副本  2:
  題名: この書籍の使い方
  ディレクトリ: howto
  検索方式: 前方一致 後方一致 条件 メニュー 
  フォントの大きさ: 16 24 30 48
  半角フォントの文字: 
  全角フォントの文字: 0xa321 -- 0xa27e
@end group
@end example

@noindent
この辞書用の appendix を作成する場合、@code{catalog(s).app} には次の
ように記します。

@example
@group
ejdict
howto
@end group
@end example

@noindent
(@code{ebinfo} コマンドに関しての詳細は、
@pxref{Invoke ebinfo, , @code{ebinfo} の実行, ebinfo-ja, ebinfo-ja})。

ディレクトリ名の大文字、小文字は、同じものとして扱われます。
また、空行およびおよび空白以外の最初の文字がハッシュ記号 (@samp{#})
である行は無視されます。

必ずもとの書籍の副本すべてを、同じ順序で @code{catalog(s).app} に
記すようにして下さい。

@c -------------------------------------------------------------------
@node What is subbook.app, subbook.app Syntax, Write catalog.app, Write Appendix Source
@section @code{<副本>.app} とは

appendix が収録している副本それぞれに対して、ソースデータファイル
@code{<副本>.app} を用意する必要があります。
@code{<副本>} の部分は、実際には個々の副本の使用するディレクトリ名
になります。

たとえば、前節の例では、書籍が @code{ejdict} と @code{howto} という
ディレクトリ名を持った副本を持っていました。
この場合、用意するファイルは @code{ejdict.app} と @code{howto.app} に
なります。

@code{<副本>.app} ファイルは appendix のメインデータである、本文の
区切りコードや外字の代替文字列を収録した @code{appendix} や @code{furoku}
といったファイルの生成元になります。
(appendix を電子ブック形式で生成すると @code{appendix}、EPWING 形式で
生成すると @code{furoku} というファイル名になります。)

@c -------------------------------------------------------------------
@node subbook.app Syntax, Single Directives, What is subbook.app, Write Appendix Source
@section @code{<副本>.app} の文法

各副本のソースデータを記したファイル「@code{<副本>.app}」の中では、
空行、および空白以外の最初の文字がハッシュ記号 (@samp{#}) である行は
無視されます。

他の行はすべて、@dfn{単独指示子 (single directive)} か
@dfn{複合指示子 (group directive)} のいずれかでなくてはなりません。
単独指示子と複合指示子は、どのような順序で定義しても差し支えありません。

単独指示子とは、1 行で完結する指示子です。
単独指示子の一般形は次の通りです。

@example
@var{指示子の名前}    @var{指示子の値}
@end example

@noindent
以下の例では、@code{stop-code} が指示子の名前、@samp{0x1f09 0x0001}
がその値です。

@example
stop-code          0x1f09 0x0001
@end example

@noindent
指示子名の大文字と小文字は区別されますので、@samp{stop-code} を
@samp{Stop-Code} と書くことはできません。
指示子の名前と値の区切りには、空白かタブを用います。
連続した空白とタブが、行頭および行末にあった場合、それらは無視されます。

複合指示子とは、記述が設定ファイル内の複数行に渡る指示子です。
複合指示子の一般形は次の通りです。

@example
@group
begin @var{複合指示子の名前}
    @var{副指示子の名前}    @var{副指示子の値}
             : 
             : (繰り返し)
             : 
end
@end group
@end example

@noindent
キーワード @code{begin} が、複合指示子の開始を表します。
@code{begin} は後ろに @var{複合指示子の名前} を引数として取ります。
@code{begin} と @var{複合指示子の名前} は空白かタブで区切り、両方とも
同じ行の中に置きます。
キーワード @code{end} は、複合指示子の終了を表します。
@code{end} は、単独で 1 行にして置きます。

今のところ @code{<副本>.app} で使用できる複合指示子の名前は、
@code{narrow} と @code{wide} の 2 つだけです。
それぞれの @dfn{副指示子} は、@code{begin} と @code{end} の行の間に
置きます。
副指示子に関する記述の一般的な規則は、単独指示子と変わりません
(たとえば、@var{副指示子の名前}と @var{副指示子の値} は空白かタブで
区切ることなど)。

以下は、 @code{narrow} 複合指示子の記述例です。

@example
@group
begin narrow
    range-start     0xa121
    range-end       0xa123
    0xa121          [→参照]
    0xa122          [→音声]
    0xa123          [→図解]
end
@end group
@end example

@c -------------------------------------------------------------------
@node Single Directives, Group Directives, subbook.app Syntax, Write Appendix Source
@section @code{<副本>.app} の単独指示子

単独指示子には次のようなものがあります。

@table @code
@item character-code
appendix の文字コードを指定します。
文字コードは必ず、CD-ROM 書籍に合わせるようにします。
CD-ROM 書籍の文字コードは、@code{ebinfo} コマンドの出力を見れば確認
できます。

CD-ROM 書籍が ISO 8859-1 で書かれている場合は、指示子の値として
@samp{ISO8859-1} を指定します。
それ以外の場合は、@samp{JISX0208} を指定して下さい。

@example
character-code          JISX0208
@end example

この指示子は、@code{<副本>.app} ファイル内で必ず一回定義されなければ
なりません。
定義しなかったり、二度以上定義するとエラーになります。

@item stop-code
副本の本文の区切りコードを指定します。
指示子の値は、区切りコードの文字番号を 2 つ書き並べたものになります。

@example
stop-code          0x1f09 0x0001
@end example

文字番号は、@samp{0x} ないし @samp{0X} に続けて 16進数 4 桁で記します。
ただし、1つ目の文字番号は、@samp{0x1f09} か @samp{0x1f41} でなければ
なりません。
それ以外だとエラーになります。

@code{ebstopcode} コマンドを使うと、副本に適切な区切りコードを特定する
ことができます (詳しくは
@pxref{Invoke ebstopcode, , @code{ebstopcode} の実行, ebstopcode-ja, ebstopcode-ja})。

この指示子は定義しなくても構いませんが、二度以上定義するとエラーになります。
@end table

@c -------------------------------------------------------------------
@node Group Directives,  , Single Directives, Write Appendix Source
@section @code{<副本>.app} の複合指示子

@code{narrow} および @code{wide} 複合指示子は、それぞれ副本に対する
半角外字および全角外字に対する代替文字列を定義するために用います。
ただし、副本が外字を定義していても、代替文字列を利用する必要がなければ、
@code{narrow}, @code{wide} 複合指示子を記述する必要はありません。

@code{narrow} と @code{wide} 複合指示子内で定義できる副指示子は、
まったく同じです。
副指示子には次のようなものがあります。

@table @code
@item range-start
@itemx range-end
外字の定義範囲を記します。
開始位置の文字番号を @code{range-start} で、終了位置の文字番号を
@code{range-end} で指定します。
文字番号は、@samp{0x} ないし @samp{0X} に続けて 16進数 4 桁で記します。
以下は記述例です。

@example
@group
    range-start     0xa121
    range-end       0xa123
@end group
@end example

定義範囲は、@code{ebinfo} コマンドの出力結果の
「半角フォントの文字 (narrow font characters)」
「全角フォントの文字 (wide font characters)」
で記された範囲と一致させるようにして下さい。

@code{narrow} および @code{wide} 複合指示子内では、
必ず一回ずつ @code{range-start} および @code{range-end} を定義しなければ
なりません。
定義しなかったり、二度以上定義したりするとエラーになります。

@item 0x@var{hhhh}
@var{hhhh} は、4 桁 の 16進数です。
文字番号 @code{0x@var{hhhh}} の全角外字ないし半角外字に対して、
代替文字列を定義します。

@example
@group
    0xa121          [名]
@end group
@end example

appendix が ISO 8859-1 で書かれている場合は、代替文字列も ISO 8859-1 
で定義します。
それ以外の場合は、代替文字列を日本語 EUC で定義します。
いずれも、代替文字列は最長で 31 バイトまでで、それを超えるとエラーに
なります。

@code{range-start}, @code{range-end} で指定した定義範囲内の外字すべて
について、代替文字列を設定する必要はありません。
ただし、同一の複合指示子内で、一つの文字番号の外字に対して代替文字列を
定義できるのは一回までです。
複数回設定しようとすると、エラーになります。
また、範囲外の文字番号の代替文字列を定義しようとしても、やはりエラーに
なります。

CD-ROM 書籍がどのような外字を定義しているのかは、@code{ebfont} コマンド
で調べることができます (詳しくは
@pxref{Invoke ebfont, , @code{ebfont} の実行, ebfont-ja, ebfont-ja})。
@end table

@c ===================================================================
@node Generate Appendix,  , Write Appendix Source, Top
@chapter appendix の生成

appendix のソースデータが書けたら、@code{ebappendix} コマンドを用いて
実際の (バイナリ形式の) appendix を生成します。

以下、この章では @code{ebappendix} の実行方法について詳しく説明します。

@menu
* Invoke ebappendix::           @code{ebappendix} の実行
* Merge Appendix::              appendix と CD-ROM 書籍の重ね合わせ
* Options to ebappendix::       @code{ebappendix} のオプション
@end menu

@c -------------------------------------------------------------------
@node Invoke ebappendix, Merge Appendix, Generate Appendix, Generate Appendix
@section @code{ebappendix} の実行

@code{ebappendix} の一般的な起動方法は次の通りです。

@example
% ebappendix @var{入力ディレクトリのパス}
@end example

@noindent
@var{入力ディレクトリのパス} には、読み込む appendix ソースデータの
ディレクトリ、つまり @file{catalog.app} または @file{catalogs.app} 
ファイルが存在するディレクトリを指定します。
省略した場合は、カレントディレクトリを指定したとみなされます。

標準では、出力ファイルはカレントディレクトリに作成されます。

@samp{--output-directory} オプションを指定することで、@code{ebappendix}
はカレントディレクトリ以外の場所に出力することができます。

@example
@group
% ebappendix --output-directory @var{出力ディレクトリのパス} \
  @var{入力ディレクトリのパス}
@end group
@end example

@noindent
もし出力ディレクトリが存在していなければ、自動的に @code{ebappendix}
が生成します。

実行すると、@code{ebappendix} は出力ディレクトリの下にサブディレクトリ
を作り、いくつかのファイルを生成します。

@c -------------------------------------------------------------------
@node Merge Appendix, Options to ebappendix, Invoke ebappendix, Generate Appendix
@section appendix と CD-ROM 書籍の重ね合わせ

HDD 上にコピーした CD-ROM 書籍と同じディレクトリに、appendix を重ねて
置くことができます。

これには、@code{ebappendix} の @samp{--output-directory} と
@samp{--no-catalog} オプションを使います。
@samp{--output-directory} オプションには、CD-ROM 書籍のトップディレクトリ
を指定します。

@example
@group
% ebappendix --no-catalog --output-directory @var{出力ディレクトリのパス} \
  @var{入力ディレクトリのパス}
@end group
@end example

なお、appendix の形式 (電子ブックか EPWING か) は CD-ROM 書籍に合わせる
ようにします
(詳しくは @pxref{Write catalog.app, , @code{catalog(s).app} の書き方})。

@code{ebappendix} の実行前後で CD-ROM 書籍のディレクトリ構成がどのように
変化するのか、例を記してみます。
まず電子ブックの場合ですが、実行前のディレクトリ構成が次のように
なっていたとします。

@example
@group
catalog
ejdict/start
howto/start
@end group
@end example

@noindent
@code{ebappendix} で appendix を重ね合わせると、次のような構成に
なります。

@example
@group
catalog
ejdict/start
ejdict/appendix  ← appendix のファイル
howto/start
howto/appendix   ← appendix のファイル
@end group
@end example

同様に、EPWING で実行前のディレクトリ構成が次のようになっていたと
すると、

@example
@group
catalogs
ejdict/data/honmon
howto/data/honmon
@end group
@end example

@noindent
実行後は、次のような構成になります。

@example
@group
catalogs
ejdict/data/honmon
ejdict/data/furoku  ← appendix のファイル
howto/data/honmon
howto/data/furoku   ← appendix のファイル
@end group
@end example

CD-ROM 書籍によっては、ディレクトリ名に大文字が混じっていることが
ありますが、@code{ebappendix} はそれを検出しますので、名前を小文字に
変えたディレクトリを別途作ってしまうことはありません。

@samp{--no-catalog} オプションを指定すると、@code{ebappendix} は
カタログファイル @file{catalog} や @file{catalogs} ファイルを生成しなく
なります。
この appendix を EB ライブラリのアプリケーションから使う際は、
CD-ROM 書籍に最初から用意されている @file{catalog} や @file{catalogs}
ファイルを CD-ROM 書籍、appendix 共用のカタログファイルとして流用する
ことになります。

appendix のカタログファイルは、CD-ROM 書籍のカタログファイルの部分集合
となっているため、こうした事が可能となっています。
@samp{--no-catalog} オプションを指定し忘れると、@code{ebappendix} は
CD-ROM 書籍のカタログファイルを上書きしてしまいますので、注意して下さい。

@c -------------------------------------------------------------------
@node Options to ebappendix,  , Merge Appendix, Generate Appendix
@section @code{ebappendix} のオプション

@code{ebappendix} コマンドは、伝統的な一文字オプション名と覚えやすい長い
オプション名の両方を扱うことができます。
長いオプション名を表すには、@samp{-} ではなく @samp{--} を用います。
オプション名が一意に決まる範囲内で、名前の後方部分を省略することができま
す。

@table @code
@item -b @var{書籍の形式}
@itemx --book-type
appendix を電子ブック、EPWING のどちらの形式のレイアウトに似せて作る
のかを指定します。
電子ブック形式なら @code{eb}、EPWING 形式なら @code{epwing} と指定します。

このオプションを指定しなかった場合、次の要領でどちらの形式で生成する
のかがが決定されます。
まず、入力ディレクトリに @code{catalog.app} ファイルが存在すればそれが
読み込まれ、電子ブック形式の appendix が生成されます。
@code{catalog.app} がなく、代わりに @code{catalogs.app} が存在すれば
それが読み込まれ、EPWING 形式の appendix が生成されます。
(@code{catalogs.app} も @code{catalog.app} なければ、エラーになります。)

@item -d
@itemx --debug
デバッグ用のメッセージを、標準エラー出力に出力します。

@item -h
@itemx --help
ヘルプメッセージを標準出力に出力して、終了します。

@item -n
@itemx --no-catalog
カタログファイル (@code{catalog} および @code{catalogs}) を生成しません。
このオプションは、書籍と appendix を同じディレクトリに重ね合わせる際に
有効です
(詳しくは @pxref{Merge Appendix, , appendix と CD-ROM 書籍の重ね合わせ})。

@item -o @var{ディレクトリ}
@itemx --output-directory @var{ディレクトリ}
出力先のディレクトリを指定します。
このオプションを省略すると、カレントディレクトリ (@code{.}) に出力します。
ディレクトリが存在しなければ、自動的に生成されます。

@item -t
@itemx --test
ファイルを出力しません。
入力ファイルを読み込んで、内容のチェックだけを行います。

@item -v
@itemx --version
バージョン番号を標準出力に出力して、終了します。
@end table

@c -------------------------------------------------------------------
@contents
@bye
